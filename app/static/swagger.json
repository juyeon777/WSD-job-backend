{
    "swagger": "2.0",
    "info": {
      "title": "Job Management API",
      "description": "Job management API for managing jobs, applications, bookmarks, and user authentication.",
      "version": "1.0.0"
    },
    "host": "localhost:5000",
    "basePath": "/api",
    "schemes": ["http"],
    "paths": {
      "/auth/register": {
        "post": {
          "summary": "회원가입",
          "description": "사용자 회원가입을 수행합니다.",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "username": {"type": "string"},
                  "email": {"type": "string"},
                  "password": {"type": "string"}
                },
                "required": ["username", "email", "password"]
              }
            }
          ],
          "responses": {
            "201": {"description": "User registered successfully"},
            "400": {"description": "Invalid input or user already exists"}
          }
        }
      },
      "/auth/login": {
        "post": {
          "summary": "로그인",
          "description": "사용자 로그인을 수행하고 토큰을 반환합니다.",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "email": {"type": "string"},
                  "password": {"type": "string"}
                },
                "required": ["email", "password"]
              }
            }
          ],
          "responses": {
            "200": {"description": "Login successful, returns tokens"},
            "401": {"description": "Invalid email or password"}
          }
        }
      },
      "/auth/logout": {
        "post": {
          "summary": "로그아웃",
          "description": "사용자 로그아웃을 수행하고 토큰을 블랙리스트에 추가합니다.",
          "responses": {
            "200": {"description": "Logged out successfully"},
            "500": {"description": "Internal server error"}
          }
        }
      },
      "/auth/refresh": {
        "post": {
          "summary": "토큰 갱신",
          "description": "Refresh 토큰을 검증하고 새로운 Access 토큰을 반환합니다.",
          "responses": {
            "200": {"description": "New access token issued"},
            "401": {"description": "Invalid or expired refresh token"}
          }
        }
      },
      "/auth/profile": {
        "put": {
          "summary": "프로필 수정",
          "description": "사용자 정보를 수정합니다.",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "username": {"type": "string"},
                  "email": {"type": "string"},
                  "password": {"type": "string"}
                }
              }
            }
          ],
          "responses": {
            "200": {"description": "Profile updated successfully"},
            "400": {"description": "Invalid input"}
          }
        },
        "delete": {
          "summary": "회원 탈퇴",
          "description": "사용자 계정을 삭제합니다.",
          "responses": {
            "200": {"description": "User deleted successfully"},
            "404": {"description": "User not found"}
          }
        }
      },
      "/auth/activity": {
        "get": {
          "summary": "활동 로그 조회",
          "description": "사용자의 로그인 이력 조회",
          "responses": {
            "200": {"description": "Activity log fetched successfully"},
            "500": {"description": "Internal server error"}
          }
        }
      },
      "/jobs": {
        "get": {
          "summary": "공고 목록 조회",
          "parameters": [
            {"name": "page", "in": "query", "type": "integer", "default": 1},
            {"name": "size", "in": "query", "type": "integer", "default": 20}
          ],
          "responses": {
            "200": {"description": "Job list fetched successfully"}
          }
        }
      },
      "/jobs/notifications": {
        "get": {
          "summary": "알림 조회",
          "description": "최근 추가된 공고 목록을 조회합니다.",
          "responses": {
            "200": {"description": "Recent job notifications returned"}
          }
        }
      }
    }
  }
  